/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package campusfoodadmin;

import java.sql.Statement;
import java.sql.ResultSet;
import java.util.UUID;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Josh Brookes
 */
public class LocationSelect extends javax.swing.JPanel {

    /**
     * Creates new form LocationSelect
     */
    public LocationSelect() {
        initComponents();
        lblTitle.setText(CampusFood.CATERER);
        updateLocationList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnNewLocation = new javax.swing.JButton();
        btnViewCalendar = new javax.swing.JButton();
        btnDeleteLocation = new javax.swing.JButton();
        btnManagePromotions = new javax.swing.JButton();
        btnViewOrders = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listLocations = new javax.swing.JList<>();

        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("University of Leicester");
        jPanel2.add(lblTitle);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setMaximumSize(new java.awt.Dimension(220, 574));
        jPanel3.setMinimumSize(new java.awt.Dimension(220, 574));

        btnNewLocation.setText("Create New Location");
        btnNewLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewLocationActionPerformed(evt);
            }
        });

        btnViewCalendar.setText("View Calendar");
        btnViewCalendar.setEnabled(false);
        btnViewCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCalendarActionPerformed(evt);
            }
        });

        btnDeleteLocation.setText("Delete Location");
        btnDeleteLocation.setEnabled(false);
        btnDeleteLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteLocationActionPerformed(evt);
            }
        });

        btnManagePromotions.setText("Manage promotions");
        btnManagePromotions.setEnabled(false);
        btnManagePromotions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagePromotionsActionPerformed(evt);
            }
        });

        btnViewOrders.setText("View Upcoming Orders");
        btnViewOrders.setEnabled(false);
        btnViewOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrdersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManagePromotions, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(btnNewLocation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewOrders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewCalendar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnManagePromotions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteLocation)
                .addContainerGap(341, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.LINE_END);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Locations");
        jPanel4.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        listLocations.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        listLocations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listLocationsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listLocations);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel4, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCalendarActionPerformed
        CampusFood.viewCalendar(listLocations.getSelectedValue(), findLocationKey());
    }//GEN-LAST:event_btnViewCalendarActionPerformed

    private void btnNewLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewLocationActionPerformed
        String locationName = "";
        locationName = JOptionPane.showInputDialog(null, "Type the name of the location:", "Add location", 1);
        if (!(locationName == null || (locationName != null && ("".equals(locationName))))) {
            try (Statement stmt = CampusFood.connection.createStatement();) {
                String locationID = UUID.randomUUID().toString();
                locationName = CampusFood.sqlNameCheck(locationName);
                String sql = "INSERT INTO dbo.Location VALUES ('" + locationID + "', '" + locationName + "', (SELECT CampusID FROM Campus WHERE CampusName='" + CampusFood.CATERER + "'))";
                stmt.executeUpdate(sql);
                sql = "";
                for (int i = 0; i < 7; i++) {
                    String locationTimeID = UUID.randomUUID().toString();
                    sql += "INSERT INTO dbo.LocationTimes VALUES ('" + locationTimeID + "', '" + locationID + "', " + i + ", " + 1 + ", " + 18 + ", " + 34 + ");\n";
                }
                stmt.executeUpdate(sql);
            } catch (Exception e) {
                e.printStackTrace();
            }
            updateLocationList();
        }
    }//GEN-LAST:event_btnNewLocationActionPerformed

    private void listLocationsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listLocationsValueChanged
        btnViewCalendar.setEnabled(true);
        btnViewOrders.setEnabled(true);
        btnManagePromotions.setEnabled(true);
        btnDeleteLocation.setEnabled(true);
    }//GEN-LAST:event_listLocationsValueChanged

    private void btnManagePromotionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagePromotionsActionPerformed
        CampusFood.viewPromotions(listLocations.getSelectedValue(), findLocationKey());
    }//GEN-LAST:event_btnManagePromotionsActionPerformed

    private void btnViewOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrdersActionPerformed
        
        CampusFood.viewOrders(listLocations.getSelectedValue(), findLocationKey());
    }//GEN-LAST:event_btnViewOrdersActionPerformed

    private void btnDeleteLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteLocationActionPerformed

    public void updateLocationList() {
        DefaultListModel model = new DefaultListModel();
        try {
            Statement stmt = CampusFood.connection.createStatement();
            String sql = "SELECT A.Name FROM dbo.Location A INNER JOIN Campus B ON A.CampusID=B.CampusID WHERE B.CampusName='" + CampusFood.CATERER + "'";
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                model.addElement(rs.getString("Name"));
            }
            listLocations.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public String findLocationKey() {
        String locationKey = "";
        try (Statement stmt = CampusFood.connection.createStatement();) {
            String sql = "SELECT A.LocationID FROM Location A INNER JOIN Campus B ON A.CampusID=B.CampusID WHERE A.Name='" + listLocations.getSelectedValue() + "' AND B.CampusName='" + CampusFood.CATERER + "'";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                locationKey = rs.getString("LocationID");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return locationKey;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteLocation;
    private javax.swing.JButton btnManagePromotions;
    private javax.swing.JButton btnNewLocation;
    private javax.swing.JButton btnViewCalendar;
    private javax.swing.JButton btnViewOrders;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> listLocations;
    // End of variables declaration//GEN-END:variables
}
