/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package campusfoodadmin;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.UUID;

/**
 *
 * @author Josh Brookes
 */
public class CampusFood extends javax.swing.JFrame {

    public static final String CATERER = "University of Leicester";
    public static Connection connection;
    public static campusfoodadmin.LocationSelect locations;
    public static campusfoodadmin.MenuCalendar calendar;
    public static campusfoodadmin.OpeningSettings opening;
    public static campusfoodadmin.CategoryManager categories;
    public static campusfoodadmin.ItemManager items;
    public static campusfoodadmin.MenuPreparation menu;
    public static campusfoodadmin.PromotionManagement promotions;
    public static campusfoodadmin.OrderManager orders;
    public static CardLayout cards;
    
    /**
     * Creates new form CampusFood
     */
    public CampusFood() {
        connection = makeConnection();
        initComponents();
        cards = (CardLayout) pnlAll.getLayout();
        locations = new LocationSelect();
        pnlAll.add(locations, "locations");
        cards.show(pnlAll, "locations");
        setLocationRelativeTo(null);
        
    }
    
    public static void viewCalendar(String locationName, String locationKey) {
        calendar = new MenuCalendar(locationName, locationKey);
        pnlAll.add(calendar, "calendar");
        cards.show(pnlAll, "calendar");
    }
    
    public static void returnToCalendar() {
        cards.show(pnlAll, "calendar");
    }
    
    public static void viewLocations() {
        locations = new LocationSelect();
        pnlAll.add(locations, "locations");
        cards.show(pnlAll, "locations");
    }
    
    public static void viewOpening(int day, int month, int year, String locationName, String locationKey) {
        opening = new OpeningSettings(day, month, year, locationName, locationKey);
        pnlAll.add(opening, "opening");
        cards.show(pnlAll, "opening");
    }
    
    public static void viewOpeningDefaults(String locationName) {
        opening = new OpeningSettings(locationName);
        pnlAll.add(opening, "opening");
        cards.show(pnlAll, "opening");
    }
    
    public static void viewCategoryManager(String locationName, String locationKey) {
        categories = new CategoryManager(locationName, locationKey);
        pnlAll.add(categories, "categories");
        cards.show(pnlAll, "categories");
    }
    
    public static void returnToCategories() {
        cards.show(pnlAll, "categories");
    }
    
    public static void viewItems(String locationName, String locationKey, String categoryName, String categoryKey) {
        items = new ItemManager(locationName, locationKey, categoryName, categoryKey);
        pnlAll.add(items, "items");
        cards.show(pnlAll, "items");
    }
    
    public static void setDayMenu(String locationName, String locationKey, int day, int month, int year) {
        menu = new MenuPreparation(locationName, locationKey, day, month, year);
        pnlAll.add(menu, "menu");
        cards.show(pnlAll, "menu");
    }
    
    public static void viewPromotions(String locationName, String locationKey) {
        promotions = new PromotionManagement(locationName, locationKey);
        pnlAll.add(promotions, "promotions");
        cards.show(pnlAll, "promotions");
    }
    
    public static void viewOrders(String locationName, String locationKey) {
        orders = new OrderManager(locationName, locationKey);
        pnlAll.add(orders, "orders");
        cards.show(pnlAll, "orders");
    }
    
    public static String sqlNameCheck(String name) {
        String sorted = "";
        while (true) {
            if (name.equals("")) return sorted;
            if (name.charAt(0) == 39) sorted += "''";
            else sorted += name.charAt(0);
            name = name.substring(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAll = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(950, 700));
        setMinimumSize(new java.awt.Dimension(950, 700));
        setPreferredSize(new java.awt.Dimension(950, 700));
        setResizable(false);

        pnlAll.setOpaque(false);
        pnlAll.setLayout(new java.awt.CardLayout());
        getContentPane().add(pnlAll, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CampusFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CampusFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CampusFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CampusFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CampusFood().setVisible(true);
            }
        });
    }
    
    public Connection makeConnection() {
        Connection _connection = null;
        String ConnectionURL = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            ConnectionURL = "jdbc:sqlserver://campusfood.database.windows.net:1433;database=CampusFood;user=jdb50@campusfood;password=password123!;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=1440;";
            _connection = DriverManager.getConnection(ConnectionURL);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
        return _connection;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel pnlAll;
    // End of variables declaration//GEN-END:variables
}
