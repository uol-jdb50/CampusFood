/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package campusfoodadmin;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.UUID;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Josh Brookes
 */
public class CategoryManager extends javax.swing.JPanel {

    /**
     * Creates new form MenuCreator
     */
    public String locationName;
    public String locationKey;
    public List<Category> categories = new ArrayList<Category>();

    public CategoryManager(String _locationName, String _locationKey) {
        initComponents();
        locationName = _locationName;
        locationKey = _locationKey;
        lblTitle.setText(CampusFood.CATERER + " | " + locationName);
        try {
            Statement stmt = CampusFood.connection.createStatement();
            String sql = "SELECT * FROM dbo.MenuCategories A INNER JOIN Location B ON A.LocationID = B.LocationID WHERE B.Name = '" + locationName + "'";
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                //locationKey = rs.getString("LocationID");
                categories.add(new Category(rs.getString("CategoryID"), rs.getString("CategoryName"), rs.getInt("CategoryOrder")));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        refreshList();
    }

    public void refreshList() {
        DefaultListModel model = new DefaultListModel();
        categories.sort(new CategoryComparator());
        for (Category c : categories) {
            if (!c.getDeleteStatus()) {
                model.addElement(c.getName());
            }
        }
        lstCategories.setModel(model);
    }

    public void checkOrder() {
        btnMoveCategoryUp.setEnabled(true);
        btnMoveCategoryDown.setEnabled(true);
        btnEditCategory.setEnabled(true);
        if (lstCategories.getSelectedIndex() == 0) {
            btnMoveCategoryUp.setEnabled(false);
        }
        if (lstCategories.getSelectedIndex() == lstCategories.getModel().getSize() - 1) {
            btnMoveCategoryDown.setEnabled(false);
        }
    }

    public void correctOrder() {
        for (int i = 0; i < categories.size(); i++) {
            if (categories.get(i).getDeleteStatus()) {
                categories.get(i).setOrder(categories.size() + 1);
            } else {
                categories.get(i).setOrder(i + 1);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnAddCategory = new javax.swing.JButton();
        btnViewItems = new javax.swing.JButton();
        btnRemoveCategory = new javax.swing.JButton();
        btnMoveCategoryUp = new javax.swing.JButton();
        btnMoveCategoryDown = new javax.swing.JButton();
        btnEditCategory = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 3));

        btnAddCategory.setText("Add new category");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });

        btnViewItems.setText("View items in category");
        btnViewItems.setToolTipText("(Saves category to database)");
        btnViewItems.setEnabled(false);
        btnViewItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewItemsActionPerformed(evt);
            }
        });

        btnRemoveCategory.setText("Remove category");
        btnRemoveCategory.setToolTipText("(Removes items within category)");
        btnRemoveCategory.setEnabled(false);
        btnRemoveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCategoryActionPerformed(evt);
            }
        });

        btnMoveCategoryUp.setText("Move category up");
        btnMoveCategoryUp.setEnabled(false);
        btnMoveCategoryUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveCategoryUpActionPerformed(evt);
            }
        });

        btnMoveCategoryDown.setText("Move category down");
        btnMoveCategoryDown.setEnabled(false);
        btnMoveCategoryDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveCategoryDownActionPerformed(evt);
            }
        });

        btnEditCategory.setText("Edit category name");
        btnEditCategory.setEnabled(false);
        btnEditCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewItems, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(btnRemoveCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(btnMoveCategoryUp, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(btnMoveCategoryDown, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(btnEditCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewItems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveCategoryUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveCategoryDown)
                .addContainerGap(376, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);

        lstCategories.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lstCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategories);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel6.setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        jPanel1.setMaximumSize(new java.awt.Dimension(200, 16));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 16));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCancel))
        );

        jPanel6.add(jPanel1);

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("University of Leicester");
        jPanel6.add(lblTitle);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel6.add(btnSave);

        add(jPanel6, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        String categoryName = "";
        categoryName = JOptionPane.showInputDialog(null, "Type the name of the category:", "Add category", 1);
        if (!(categoryName == null || (categoryName != null && ("".equals(categoryName))))) {
            Category category = new Category(categoryName, categories.size());
            categories.add(category);
            refreshList();
        }
    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void lstCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoriesValueChanged
        btnViewItems.setEnabled(true);
        btnRemoveCategory.setEnabled(true);
        checkOrder();
    }//GEN-LAST:event_lstCategoriesValueChanged

    private void btnMoveCategoryUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveCategoryUpActionPerformed
        Collections.swap(categories, lstCategories.getSelectedIndex(), lstCategories.getSelectedIndex() - 1);
        correctOrder();
        refreshList();
    }//GEN-LAST:event_btnMoveCategoryUpActionPerformed

    private void btnMoveCategoryDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveCategoryDownActionPerformed
        Collections.swap(categories, lstCategories.getSelectedIndex(), lstCategories.getSelectedIndex() + 1);
        correctOrder();
        refreshList();
    }//GEN-LAST:event_btnMoveCategoryDownActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String sqlUpdate = "";
        String sqlCheck = "";
        for (Category c : categories) {
            sqlCheck = "SELECT * FROM MenuCategories WHERE CategoryID='" + c.getID() + "'";
            try (Statement stmtCheck = CampusFood.connection.createStatement();) {
                ResultSet rs = stmtCheck.executeQuery(sqlCheck);
                if (!rs.isBeforeFirst()) {
                    if (!c.getDeleteStatus()) {
                        sqlUpdate += "INSERT INTO MenuCategories VALUES ('" + c.getID() + "', '" + locationKey + "', '" + c.getName() + "', '" + c.getOrder() + "');\n";
                    }
                }
                while (rs.next()) {
                    if (!c.getDeleteStatus()) {
                        sqlUpdate += "UPDATE MenuCategories SET CategoryName='" + c.getName() + "', CategoryOrder='" + c.getOrder() + "' WHERE CategoryID='" + c.getID() + "';\n";
                    } else {
                        sqlUpdate += "DELETE FROM MenuCategories WHERE CategoryID='" + c.getID() + "';\n";
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        try (Statement stmtUpdate = CampusFood.connection.createStatement();) {
            stmtUpdate.executeUpdate(sqlUpdate);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        CampusFood.returnToCalendar();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCategoryActionPerformed
        String categoryName = "";
        categoryName = JOptionPane.showInputDialog(null, "Type the name of the category:", "Add category", 1);
        if (!(categoryName == null || (categoryName != null && ("".equals(categoryName))))) {
            categories.get(lstCategories.getSelectedIndex()).setName(categoryName);
            refreshList();
        }
    }//GEN-LAST:event_btnEditCategoryActionPerformed

    private void btnRemoveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCategoryActionPerformed
        categories.get(lstCategories.getSelectedIndex()).setDelete();
        try {
            Statement stmt = CampusFood.connection.createStatement();
            String sql = "SELECT ItemID FROM Items WHERE CategoryID='" + categories.get(lstCategories.getSelectedIndex()).getID() + "';";
            ResultSet rs = stmt.executeQuery(sql);
            String sqlItems = "";
            while (rs.next()) {
                sqlItems += "DELETE FROM ItemAllergens WHERE ItemID='" + rs.getString("ItemID") + "';\n";
                sqlItems += "DELETE FROM Items WHERE ItemID='" + rs.getString("ItemID") + "';\n";
            }
            stmt.executeUpdate(sqlItems);
        } catch (Exception e) {
            e.printStackTrace();
        }
        correctOrder();
        refreshList();
    }//GEN-LAST:event_btnRemoveCategoryActionPerformed

    private void btnViewItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewItemsActionPerformed
        CampusFood.viewItems(locationName, locationKey, categories.get(lstCategories.getSelectedIndex()).getName(), categories.get(lstCategories.getSelectedIndex()).getID());
    }//GEN-LAST:event_btnViewItemsActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        CampusFood.returnToCalendar();
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEditCategory;
    private javax.swing.JButton btnMoveCategoryDown;
    private javax.swing.JButton btnMoveCategoryUp;
    private javax.swing.JButton btnRemoveCategory;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnViewItems;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstCategories;
    // End of variables declaration//GEN-END:variables
}
