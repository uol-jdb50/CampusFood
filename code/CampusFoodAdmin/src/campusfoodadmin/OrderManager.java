/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package campusfoodadmin;

import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author Josh Brookes
 */
public class OrderManager extends javax.swing.JPanel {

    String locationName;
    String locationKey;
    SpinnerDateModel dateModel;
    SimpleDateFormat sqlFormat = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat displayFormat = new SimpleDateFormat("dd/MM/yyyy");
    List<Order> orders = new ArrayList<>();

    /**
     * Creates new form OrderManager
     */
    public OrderManager(String _locationName, String _locationKey) {
        locationName = _locationName;
        locationKey = _locationKey;
        initComponents();
        lblLocation.setText("Location: " + locationName);

        dateModel = new SpinnerDateModel();
        dateModel.setCalendarField(Calendar.DAY_OF_YEAR);
        selDate.setModel(dateModel);
        selDate.setEditor(new JSpinner.DateEditor(selDate, displayFormat.toPattern()));
    }

    public void updateOrderList() {
        Date date;
        boolean checkin;
        boolean collected;

        date = (Date) selDate.getValue();
        checkin = chkCheckIn.isSelected();
        collected = chkCollected.isSelected();

        String sql = "";
        if (checkin == false && collected == false) {
            sql = "SELECT * FROM Orders WHERE CollectDate='" + sqlFormat.format(date) + "' AND CheckedIn=0 AND Collected=0;";
        } else if (checkin == true && collected == false) {
            sql = "SELECT * FROM Orders WHERE CollectDate='" + sqlFormat.format(date) + "' AND Collected=0;";
        } else if (checkin == false && collected == true) {
            sql = "SELECT * FROM Orders WHERE CollectDate='" + sqlFormat.format(date) + "' AND CheckedIn=0;";
        } else if (checkin == true && collected == true) {
            sql = "SELECT * FROM Orders WHERE CollectDate='" + sqlFormat.format(date) + "';";
        }
        try {
            Statement stmt = CampusFood.connection.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            orders.clear();
            DefaultListModel model = new DefaultListModel();
            while (rs.next()) {
                Order o = new Order(rs.getString("OrderID"), rs.getString("UserID"), rs.getString("LocationID"), rs.getDate("OrderDate"), rs.getDate("CollectDate"), rs.getDouble("TotalPrice"), rs.getBoolean("CheckedIn"), rs.getBoolean("Collected"), rs.getString("CollectName"));
                orders.add(o);
                model.addElement(o.getName());
            }
            lstOrders.setModel(model);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void updateOrderItemList(Order order) {
        String sql = "SELECT B.Name, A.Quantity FROM OrderItems A INNER JOIN Items B ON A.ItemID=B.ItemID WHERE A.OrderID='" + order.getOrderId() + "';";
        List<OrderItem> orderItems = new ArrayList<>();
        try {
            Statement stmt = CampusFood.connection.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            DefaultListModel model = new DefaultListModel();
            while (rs.next()) {
                OrderItem i = new OrderItem(rs.getString("Name"), rs.getInt("Quantity"));
                orderItems.add(i);
                model.addElement(i.getName() + " (" + i.getQuantity() + ")");
            }
            order.setItems(orderItems);
            lstOrderItems.setModel(model);
            String sqlAllergen = "SELECT AllergenMatrix FROM Users WHERE UserID='" + order.getUserId() + "';";
            ResultSet rsAllergen = stmt.executeQuery(sqlAllergen);
            while (rsAllergen.next()) {
                order.setAllergens(rsAllergen.getInt("AllergenMatrix"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblLocation = new javax.swing.JLabel();
        chkCheckIn = new javax.swing.JCheckBox();
        chkCollected = new javax.swing.JCheckBox();
        selDate = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstOrders = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        btnSetCollected = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOrderItems = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblDetails = new javax.swing.JTextPane();

        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        jPanel1.setMaximumSize(new java.awt.Dimension(200, 16));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 16));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCancel))
        );

        jPanel6.add(jPanel1);

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("University of Leicester");
        jPanel6.add(lblTitle);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 26));
        jPanel2.setMinimumSize(new java.awt.Dimension(100, 26));
        jPanel2.setPreferredSize(new java.awt.Dimension(286, 26));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel2);

        add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel3.setLayout(new java.awt.GridLayout(1, 3));

        lblLocation.setText("Location:");

        chkCheckIn.setText("Include Checked In");

        chkCollected.setText("Include Collected");

        jLabel1.setText("Date:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkCheckIn)
                            .addComponent(chkCollected)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selDate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLocation)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(selDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(chkCheckIn)
                .addGap(18, 18, 18)
                .addComponent(chkCollected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addContainerGap(392, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4);

        lstOrders.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOrdersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOrders);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Current Orders");

        btnSetCollected.setText("Mark Selected Order as Collected");
        btnSetCollected.setEnabled(false);
        btnSetCollected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetCollectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSetCollected, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSetCollected)
                .addContainerGap())
        );

        jPanel3.add(jPanel5);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Selected Order");

        jScrollPane2.setViewportView(lstOrderItems);

        jScrollPane3.setViewportView(lblDetails);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel7);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        CampusFood.viewLocations();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateOrderList();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSetCollectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetCollectedActionPerformed
        if (lstOrders.getSelectedIndex() != -1) {
            orders.get(lstOrders.getSelectedIndex()).setCollected(true);
            updateOrderList();
        }
    }//GEN-LAST:event_btnSetCollectedActionPerformed

    private void lstOrdersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOrdersValueChanged
        if (lstOrders.getSelectedIndex() != -1) {
            btnSetCollected.setEnabled(true);
            Order o = orders.get(lstOrders.getSelectedIndex());
            updateOrderItemList(o);
            
            lblDetails.setText("Collection Name: " + o.getName() + "\n\nAllergens: " + o.getAllergens() + "\n\nTotal: £" + String.format("%.2f", o.getPrice()) + "\n\nChecked In: " + o.getCheckedIn() + "\n\nCollected: " + o.getCollected());
        }
    }//GEN-LAST:event_lstOrdersValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSetCollected;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkCheckIn;
    private javax.swing.JCheckBox chkCollected;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane lblDetails;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstOrderItems;
    private javax.swing.JList<String> lstOrders;
    private javax.swing.JSpinner selDate;
    // End of variables declaration//GEN-END:variables
}
